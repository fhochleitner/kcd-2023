apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: k8s-operations
spec:
  workflowMetadata:
    labels:
      app: argo
      clusterworkflowtemplate: k8s-operations
  templates:
    - name: execute-command
      metadata:
        labels:
          template: execute-command
      inputs:
        parameters:
          - name: command
      container:
        name: kubectl
        image: ghcr.io/gepaplexx/kubectl-oc:4.12
        command:
          - bash
          - -c
        args:
          - '{{ inputs.parameters.command }}'
      metrics:
        prometheus:
          - name: duration_task_seconds
            help: "Duration gauge by task name in seconds - task level"
            labels:
              - key: "task_name"
                value: "execute-command"
              - key: "application"
                value: "{{ workflow.parameters.reponame }}"
              - key: "branch"
                value: "{{ workflow.parameters.branch }}"
              - key: "commit_user"
                value: "{{ workflow.parameters.commit-user }}"
              - key: "commit_email"
                value: "{{ workflow.parameters.commit-email }}"
              - key: status
                value: "{{ status }}"
            gauge:
              realtime: false
              value: "{{ duration }}"
          - name: result_task_counter
            help: "Count of task execution by result status  - task level"
            labels:
              - key: "task_name"
                value: "execute-command"
              - key: "application"
                value: "{{ workflow.parameters.reponame }}"
              - key: "branch"
                value: "{{ workflow.parameters.branch }}"
              - key: "commit_user"
                value: "{{ workflow.parameters.commit-user }}"
              - key: "commit_email"
                value: "{{ workflow.parameters.commit-email }}"
              - key: status
                value: "{{ status }}"
              - key: "id"
                value: "{{ workflow.uid }}"
            counter:
              value: "1"

    - name: wait-for-deployment
      metadata:
        labels:
          template: wait-for-deployment
      inputs:
        parameters:
          - name: application
            default: ""
          - name: namespace
            default: ""
          - name: image
            default: ""
      script:
        image: ghcr.io/gepaplexx/kubectl-oc:4.12
        command: [ "bash" ]
        source: |
          #!/bin/bash
          
          set -e
          application={{ inputs.parameters.application }}
          image={{ inputs.parameters.image }}
          namespace={{ inputs.parameters.application }}
          status=Running
          
          counter=0
          while [ $counter -lt 20 ]; do
            PODS="$(kubectl get pods -o custom-columns="NAME:metadata.name,IMAGE:spec.containers[0].image,STATUS:.status.phase" -n ${namespace})"
            readarray -t POD <<< "$PODS"
            for  line in "${POD[@]}";do
              # Trim Whitespaces
              line=$(echo $line | xargs)
              readarray -d " " -t elements <<< "$line"
              if  [[ "${elements[0]}" =~ ^"${application}" ]] && [[ "${elements[1]}" == "${image}" ]] && [[ "${elements[2]}" =~ ^"${status}" ]]; then
                echo "Application is running"
                echo "waiting an additional 60 seconds for previous instances to terminate"
                sleep 60
                exit 0
              fi
            done
            counter=$((counter+1))
            sleep 60s
          done
          echo "Application has not been updated"
          exit 1
      metrics:
        prometheus:
          - name: duration_task_seconds
            help: "Duration gauge by task name in seconds - task level"
            labels:
              - key: "task_name"
                value: "wait-for-deployment"
              - key: "application"
                value: "{{ workflow.parameters.reponame }}"
              - key: "branch"
                value: "{{ workflow.parameters.branch }}"
              - key: "commit_user"
                value: "{{ workflow.parameters.commit-user }}"
              - key: "commit_email"
                value: "{{ workflow.parameters.commit-email }}"
              - key: status
                value: "{{ status }}"
            gauge:
              realtime: false
              value: "{{ duration }}"
          - name: result_task_counter
            help: "Count of task execution by result status  - task level"
            labels:
              - key: "task_name"
                value: "wait-for-deployment"
              - key: "application"
                value: "{{ workflow.parameters.reponame }}"
              - key: "branch"
                value: "{{ workflow.parameters.branch }}"
              - key: "commit_user"
                value: "{{ workflow.parameters.commit-user }}"
              - key: "commit_email"
                value: "{{ workflow.parameters.commit-email }}"
              - key: status
                value: "{{ status }}"
              - key: "id"
                value: "{{ workflow.uid }}"
            counter:
              value: "1"